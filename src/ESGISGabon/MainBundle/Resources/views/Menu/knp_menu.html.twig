{% extends 'knp_menu.html.twig' %}

{% block item %}

    {% import "knp_menu.html.twig" as macros %}

    {% if item.displayed %}
        {%- set attributes = item.attributes %}
        {%- set is_submenu = attributes.submenu|default(false) %}

        {# building the class of the item #}
        {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
        {%- if matcher.isCurrent(item) %}
            {%- set classes = classes|merge([options.currentClass]) %}
        {%- elseif matcher.isAncestor(item, options.depth) %}
            {%- set classes = classes|merge([options.ancestorClass]) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}

        {# building the class of the children #}
        {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
        {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}

        {# putting classes together #}
        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}
        {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}

        {# displaying the item #}
        <li {{ macros.attributes(attributes) }}>
            {%- if item.uri is not empty and (not item.current or options.currentAsLink) %}
            {{ block('linkElement') }}
            {%- else %}
            {{ block('spanElement') }}
            {%- endif %}
            {# render the list of children #}
            {{ block('list') }}
        </li>
    {% endif %}
{% endblock %}

{% block linkElement %}
    <a href="{{ item.uri }}" {{ macros.attributes(item.linkAttributes) }}>
        {%- if item.attribute('materialicons') is not empty %}
            <i class="material-icons">{{ item.attribute('materialicons') }}</i>
        {% endif %}
        {{ block('label') }}
        {%- if item.attribute('submenu') %}
            <i class="material-icons icon-absolute">
                {%- if matcher.isAncestor(item, options.depth) %}
                    expand_more
                {%- else %}
                    chevron_left
                {%- endif %}
            </i>
        {% endif %}
    </a>
{% endblock %}

{% block spanElement %}
    <span>{{ macros.attributes(item.labelAttributes) }}>
        {% if item.attribute('icon') is not empty  %}
            <i class="{{ item.attribute('icon') }}"></i>
        {% endif %}
        {{ block('label') }}
	</span>
{% endblock %}

{% block label %}{{ item.label|trans }}{% endblock %}